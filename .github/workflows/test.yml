name: unit-test

on: [push]

jobs:
  unit-test-on-linux:
    strategy:
      matrix:
        os: [ubuntu-latest]        
        include:
          - goarch: mipsle
            goos: linux        
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ">=1.19.4"
      - run: |
          go version
          go test -v ./encryption
      - name: make
        run: make build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }} 
      - name: Packaging...
        run: tar czf nodeUpgrade-${{ matrix.goos }}-${{ matrix.goarch }}.tgz nodeUpgrade
      - name: Get version
        id: version
        run: echo "::set-output name=version::$(git rev-parse --short HEAD)"
      - name: Gets latest created release info
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
            repo_token: "${{ secrets.GITHUB_TOKEN }}"
            automatic_release_tag:  ${{ steps.version.outputs.version }}
            prerelease: true
            title: "Development Build"
            files: |
                          ./nodeUpgrade-${{ matrix.goos }}-${{ matrix.goarch }}.tgz            

  unit-test-on-win:
    strategy:
      matrix:
        os: [windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ">=1.19.4"
      - run: |
          go version
          go test -v ./encryption
          $env:GOARCH="386"
          go test -v ./encryption
      - name: make
        run: make build
      - name: Packaging...
        run: tar czf nodeUpgrade-${{ matrix.goos }}-${{ matrix.goarch }}.tgz nodeUpgrade
      - name: Get version
        id: version
        run: echo "::set-output name=version::$(git rev-parse --short HEAD)"
      - name: Gets latest created release info
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
            repo_token: "${{ secrets.GITHUB_TOKEN }}"
            automatic_release_tag:  ${{ steps.version.outputs.version }}
            prerelease: true
            title: "Development Build"
            files: |
                          ./nodeUpgrade-${{ matrix.goos }}-${{ matrix.goarch }}.tgz  
